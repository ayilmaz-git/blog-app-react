{"version":3,"sources":["serviceWorker.js","components/BlogListItem.js","components/BlogList.js","components/BlogListPage.js","components/BlogDetailsItem.js","components/BlogDetailsPage.js","components/NotFoundPage.js","components/BlogForm.js","firebase/firebaseConfig.js","actions/blogs.js","components/AddBlogPage.js","components/EditBlogPage.js","actions/auth.js","components/LoginPage.js","components/Header.js","routers/PrivateRoute.js","routers/PublicRouter.js","routers/AppRouter.js","reducers/blogs.js","reducers/auth.js","store/configureStore.js","index.js"],"names":["Boolean","window","location","hostname","match","BlogListItem","id","title","className","to","style","color","connect","state","blogs","props","map","blog","key","BlogListPage","BlogDetailsItem","description","class","find","params","NotFoundPage","BlogForm","onTitleChange","e","target","value","setState","onDescriptionChange","onSubmit","preventDefault","error","dateAdded","Date","now","this","placeholder","onChange","rows","type","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","googleAuthProvider","auth","GoogleAuthProvider","addBlog","dispatch","blogData","getState","uid","ref","push","then","res","addBlogToDatabase","history","b","updates","update","editBlog","onClick","remove","removeBlog","login","signInWithPopup","logout","signOut","LoginPage","Header","activeClassName","isAuthenticated","component","rest","createHistory","AppRouter","path","exact","AddBlogPage","EditBlogPage","BlogDetailsPage","blogState","blogReducer","action","filter","authState","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","result","ReactDOM","render","document","getElementById","isRendered","renderApp","onAuthStateChanged","user","once","snapshot","forEach","val","setBlogs","pathname","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d5e24a01.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst BlogListItem = ({ id,title }) => {\n    return (\n\n            <li className=\"list-group-item\">\n               <i className=\"fa-brands fa-node-js\"></i> <Link to= {`/blogs/${id}`}> {title}</Link> - - <i className=\"fa-solid fa-pen-to-square\" style={{color: 'darkred'}}></i> <Link to= {`/edit/${id}`}>Düzenle</Link>\n            </li>\n    )\n}\n\nexport default BlogListItem\n","import React from 'react'\nimport {connect} from 'react-redux';\nimport BlogListItem from './BlogListItem';\n\nconst BlogList = (props) => {\n    return (\n        \n        <ul className=\"list-group list-group-flush\">\n            {props.blogs.map(blog => {\n                return <BlogListItem key={blog.id} {...blog} />\n            })}\n        </ul>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        blogs: state.blogs\n    }\n}\n\n\n// Higher Order Component (HOC)\nexport default connect(mapStateToProps)(BlogList);\n","import React from 'react'\nimport BlogList from './BlogList'\n\nconst BlogListPage = () => {\n    return (\n           <div className=\"col=12 p-5\">\n                            <div className=\"jumbotron \">\n                            <h1 className=\"display-4\"> Yazılanlar: </h1>\n                            <BlogList />\n                            </div>\n            </div>\n    \n    )\n}\n\nexport default BlogListPage\n","import React from 'react'\n\nconst BlogDetailsItem = ({id,title,description}) => {\n    return (\n\n           <div className=\"col=12 mt-3 p-5\">\n            <code className=''><i class=\"fa-solid fa-laptop-code\"></i> id: {id}</code>\n            <h1 className=\"display-3\">{title}</h1>\n            <hr></hr>\n            <p>{description}</p>\n        </div>\n\n    )\n}\n\nexport default BlogDetailsItem\n","import React from 'react'\nimport {connect} from 'react-redux';\nimport BlogDetailsItem from './BlogDetailsItem';\n\n\nconst BlogDetailsPage = (props) => {\n    return (\n       <BlogDetailsItem {...props.blog} />\n    )\n}\n\nconst mapStatetoProps = (state, props) => {\n    return {\n        blog: state.blogs.find((blog) => {\n            return blog.id === props.match.params.id\n        })\n    }\n}\n\nexport default connect(mapStatetoProps)(BlogDetailsPage);\n","import React from 'react'\n\nconst NotFoundPage = () => {\n    return (\n        <div className=\"container\">\n         <div className=\"row justify-content-center\">\n            <div className=\"col=12 mt-3\">\n                <div className=\"jumbotron \">\n            404 Page\n        </div>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import React, { Component } from 'react'\n\n\nexport default class BlogForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: props.blog? props.blog.title: '',\n            description: props.blog ? props.blog.description: '',\n            error: ''\n        }\n    }\n\n    onTitleChange = (e) => {\n        const title = e.target.value;\n        this.setState(()=> ({ title }));\n    }\n\n    onDescriptionChange = (e) => {\n        const description = e.target.value;\n        this.setState(() => ({ description }));\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        if(!this.state.title || !this.state.description) {\n           this.setState({error: 'lütfen tüm alanları doldurunuz.'});\n        } else {\n            this.setState({error: ''});\n            this.props.onSubmit({\n                title: this.state.title,\n                description: this.state.description,\n                dateAdded: Date.now()\n            });\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {this.state.error && <p>{this.state.error}</p>}\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\"><h1 className=\"display-4\">Başlık </h1></label>\n                        <input \n                            className=\"form-control\"\n                            placeholder=\"başlık yazınız\" \n                            value={this.state.title}\n                            onChange={this.onTitleChange}/>\n                    </div>\n                    <div className=\"mb-3\">\n                    <label className=\"form-label\"><h1 className=\"display-4\">İçerik </h1></label>\n                        <textarea className=\"form-control\" rows=\"3\"\n                            placeholder=\"metni buraya yazınız\"\n                            value={this.state.description}\n                            onChange={this.onDescriptionChange}></textarea>\n                    </div>\n                    <div>\n                        <button type=\"submit\" className=\"btn btn-primary mb-3\">Kaydet</button>\n                    </div>\n                </form>\n            </>\n        )\n    }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/database'; \nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDU1rlxtVCrS1LCZcvhGCdm72MaD9W_8SM\",\n  authDomain: \"reactjs-blog-app.firebaseapp.com\",\n  databaseURL: \"https://reactjs-blog-app-default-rtdb.firebaseio.com\",\n  projectId: \"reactjs-blog-app\",\n  storageBucket: \"reactjs-blog-app.appspot.com\",\n  messagingSenderId: \"1083112772929\",\n  appId: \"1:1083112772929:web:14af6aa977ae544a04bdc0\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst database = firebase.database();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { database as default, googleAuthProvider, firebase};\n","import database from '../firebase/firebaseConfig';\n\nexport const addBlog = (blog) => ({\n    type: \"ADD_BLOG\",\n    blog\n})\n\nexport const addBlogToDatabase = (blogData = {}) => {\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid;\n        const { title='', description='',dateAdded=0 } = blogData;\n        const blog = {title,description,dateAdded,uid};\n\n        database.ref(\"blogs\").push(blog).then((res) => {\n            dispatch(addBlog({\n                id: res.key,\n                ...blog\n            }))\n        })\n    }\n}\n\nexport const removeBlog = (id) => ({\n    type: \"REMOVE_BLOG\",\n    id: id\n});\n\nexport const removeBlogFromDatabase = (id) => {\n    return (dispatch) => {\n        return database.ref(`blogs/${id}`).remove().then(() => {\n            dispatch(removeBlog(id));\n        })\n    }   \n}\n\nexport const editBlog = (id,updates) => ({\n    type: \"EDIT_BLOG\",\n    id,\n    updates\n})\n\nexport const editBlogFromDatabase = (id, updates) => {\n    return (dispatch) => {\n        return database.ref(`blogs/${id}`).update(updates).then(() => {\n            dispatch(editBlog(id,updates));\n        })\n    }\n}\n\nexport const setBlogs = (blogs) => ({\n    type: \"SET_BLOGS\",\n    blogs\n})\n\nexport const getBlogsFromDatabase = () => {\n    return (dispatch, getState) => {\n        const uid = getState().auth.uid;\n        return database.ref(\"blogs\").once(\"value\").then((snapshot) => {\n            const blogs = [];\n\n            snapshot.forEach((blog) => {\n                const result = blog.val();\n\n                if (result.uid === uid) {\n                    blogs.push({\n                        id: blog.key,\n                        ...result\n                    })\n\n                }\n\n            })\n\n            dispatch(setBlogs(blogs));\n        })\n    }\n}\nexport const clearBlog = () => ({\n    type: \"CLEAR_BLOG\"\n})","import React from 'react'\nimport BlogForm from './BlogForm';\nimport {connect} from 'react-redux';\nimport {addBlogToDatabase} from '../actions/blogs';\n \nconst AddBlogPage = (props) => {\n    return (\n        <div className=\"col=12 p-5\">\n        <div className=\"jumbotron \">\n            <BlogForm onSubmit={(blog) => {\n                props.dispatch(addBlogToDatabase(blog));\n                props.history.push('/blogs');\n            }}/>\n        </div>\n        </div>\n    )\n}\n\nexport default connect()(AddBlogPage);\n","import React from 'react'\nimport BlogForm from './BlogForm'\nimport {connect} from 'react-redux';\nimport {editBlogFromDatabase,removeBlogFromDatabase} from '../actions/blogs';\n\nconst EditBlogPage = (props) => {\n    return (\n        <div className=\"col=12 p-5\">\n        <div className=\"jumbotron \">\n            <BlogForm \n                blog={props.blog}\n                onSubmit = {(blog) => {\n                    props.dispatch(editBlogFromDatabase(props.blog.id, blog));\n                    props.history.push('/blogs');\n                }}\n            />\n            <button \n                className=\"btn btn-danger \" \n                 onClick={() => {\n                props.dispatch(removeBlogFromDatabase(props.blog.id));\n                props.history.push('/blogs');\n            }}>Sil</button>\n        </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state,props) => {\n    return {\n        blog: state.blogs.find((b) => {\n            return b.id === props.match.params.id\n        })\n    }\n}\n\nexport default connect(mapStateToProps)(EditBlogPage);\n","import {firebase, googleAuthProvider} from '../firebase/firebaseConfig';\n\nexport const login = () => {\n    return firebase.auth().signInWithPopup(googleAuthProvider);\n}\n\nexport const loginAction = (uid) => ({\n    type: 'LOGIN',\n    uid\n})\n\nexport const logout = () => {\n    return firebase.auth().signOut();\n}\n\nexport const logoutAction = () => ({\n    type: 'LOGOUT'\n})","import React from \"react\";\nimport { login } from \"../actions/auth\";\nimport { Link } from \"react-router-dom\";\n\n\nexport const LoginPage = () => (\n    <>\n<nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <div className=\"container\">\n            <Link to=\"/\" className=\"navbar-brand\">\n            <i class=\"fa-brands fa-react\"></i> Reactjs Blog\n            </Link>\n        \n\n            </div>\n             \n            </nav>\n\n            <div className=\"container\">\n         <div className=\"row justify-content-center\">\n            <div className=\"col=12 mt-3\">\n                <div className=\"jumbotron \">\n                  <h1 className=\"display-4\">React js Kişisel Blog Project</h1>\n                  <p className=\"lead\">Lorem ipsum dolor, sit amet consectetur adipisicing elit. Tempora harum nulla voluptate illo voluptates. Ut eveniet illo, nulla laudantium reiciendis ducimus magni ea quasi quam doloremque velit molestiae vitae nobis, nostrum qui, pariatur exercitationem at ullam? Blanditiis aliquid cum ipsa! Unde soluta dolorum veritatis exercitationem consectetur alias reiciendis animi quos.</p>\n                  <h4>google hesabınla giriş yap, hemen yazmaya başla.</h4>\n                  <p className=\"lead\">\n                  <button className='btn btn-danger btn-lg' onClick={login}> <i class=\"fa-brands fa-google\"></i> google ile giriş</button>\n                  </p>\n            </div>\n         </div>\n        </div>\n     </div>\n </>\n);\n\nexport default LoginPage;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../actions/auth'\n\nconst Header = () => {\n    return (\n        <header>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <div className=\"container\">\n            <Link to=\"/\" className=\"navbar-brand\">\n            <i className=\"fa-brands fa-react\"></i> Reactjs Blog\n            </Link>\n            \n            <div className=\"collapse navbar-collapse\">\n                   <ul className=\"navbar-nav ml-auto\">\n                   <li className=\"nav-item p-2\"><Link to=\"/blogs\" activeClassName=\"nav-link active\" style={{color: 'lightslategray'}}>Blogs</Link></li> |\n                        <li className=\"nav-item p-2\"> <Link to=\"/create\" activeClassName=\"nav-link active\" style={{color: 'lightslategray'}}>Create</Link></li>\n                        \n                    </ul>\n                </div>\n                <button className='btn btn-light btn-sm' onClick={logout}>Çıkış</button>\n\n            </div>\n             \n            </nav>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport Header from '../components/Header';\n\nconst PrivateRoute = ({isAuthenticated, component: Component, ...rest}) => (\n    <Route {...rest} component={(props) => (\n        isAuthenticated ? (\n            <div>\n            <Header/>\n            <Component {...props} />\n\n            </div>\n        ):(\n            \n            <Redirect to=\"/\"/>\n        )\n    )}/>\n)\nconst mapStateToProps = (state) => ({\n    isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst PublicRoute = ({isAuthenticated, component: Component, ...rest}) => (\n    <Route {...rest} component={(props) => (\n        isAuthenticated ? (\n            <Redirect to=\"/blogs\"/>\n        ):(\n            <Component {...props} />\n        )\n    )}/>\n)\nconst mapStateToProps = (state) => ({\n    isAuthenticated: !!state.auth.uid\n});\n\nexport default connect(mapStateToProps)(PublicRoute)","import React from 'react'\nimport BlogListPage from '../components/BlogListPage'\nimport BlogDetailsPage from '../components/BlogDetailsPage'\nimport NotFoundPage from '../components/NotFoundPage'\nimport { Switch, Router } from 'react-router-dom'\nimport AddBlogPage from '../components/AddBlogPage'\nimport EditBlogPage from '../components/EditBlogPage'\nimport LoginPage from '../components/LoginPage'\nimport createHistory from 'history/createBrowserHistory'\nimport PrivateRoute from './PrivateRoute'\nimport PublicRoute from './PublicRouter'\n\nexport const history = createHistory(); \n\nconst AppRouter = () => {\n    return (\n        <Router history={history}>\n            <div>\n                <Switch>\n                    <PublicRoute path=\"/\" component={LoginPage} exact/>\n                    <PrivateRoute path=\"/blogs\" component={BlogListPage} exact/>\n                    <PrivateRoute path=\"/create\" component={AddBlogPage}/>\n                    <PrivateRoute path=\"/edit/:id\" component={EditBlogPage}/>\n                    <PrivateRoute path=\"/blogs/:id\" component={BlogDetailsPage} />\n                    <PublicRoute component={NotFoundPage} />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","const blogState = []\n\nconst blogReducer = (state = blogState, action) => {\n    switch (action.type) {\n        case \"ADD_BLOG\":\n            return [\n                ...state,\n                action.blog\n            ]\n        case \"REMOVE_BLOG\":\n            return state.filter(({ id }) => {\n                return id !== action.id;\n            })\n        case \"EDIT_BLOG\":\n            return state.map((blog) => {\n                if(blog.id === action.id) {\n                    return {\n                        ...blog,\n                        ...action.updates\n                    }\n                } else {\n                    return blog;\n                }\n            })\n        case \"SET_BLOGS\":\n            return action.blogs;\n        case \"CLEAR_BLOGS\":\n            return [];\n        default:\n            return state;\n    }\n}\n\nexport default blogReducer;","const authState = {};\n\nconst authReducer = (state = authState, action) => {\n    switch (action.type) {\n        case 'LOGIN':\n            return {\n                uid: action.uid\n            }\n        case 'LOGOUT':\n            return {};\n        default:\n            return state\n    }\n}\n\n\nexport default authReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport blogReducer from '../reducers/blogs';\nimport authReducer from '../reducers/auth';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default () => {\n    const store = createStore(\n        combineReducers({\n            blogs: blogReducer,\n            auth: authReducer\n        }),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        composeEnhancers(applyMiddleware(thunk))\n    );\n    return store;\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter, {history} from './routers/AppRouter';\nimport \"./App.css\"\nimport configureStore from './store/configureStore';\nimport { getBlogsFromDatabase, clearBlog  } from './actions/blogs'\nimport {firebase} from './firebase/firebaseConfig'\nimport {loginAction, logoutAction } from './actions/auth'\n\nconst store = configureStore();\n\nconst result = (\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>\n)\n\nReactDOM.render(<p>Yükleniyor...</p>, document.getElementById('root'));\n\nlet isRendered = false;\nconst renderApp = () => {\n    if(!isRendered) {\n        ReactDOM.render(result, document.getElementById('root'));\n        isRendered = true;\n    }\n}\n\nfirebase.auth().onAuthStateChanged(function(user) {\n    if(user) {\n        store.dispatch(loginAction(user.uid));\n        store.dispatch(getBlogsFromDatabase()).then(() => {\n            renderApp();\n            if (history.location.pathname === '/') {\n                history.push('/blogs');\n            }\n        })\n    } else {\n        store.dispatch(logoutAction());\n        store.dispatch(clearBlog());\n        renderApp();\n        history.push(\"/\");\n    }\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}